buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8   // 자바 버전입니다.

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

//Version 관리. (의존성관리는 SpringBoot에서 하지만, 그 외 모듈에 대해서는 버젼이 명시되어야함)
def version = [
	log4jdbcRemix :  '0.2.7'
]

dependencies {

	//SpringBott Web 모듈
	compile('org.springframework.boot:spring-boot-starter-web')
	
	//Tomcat에서 JSP를 사용할 수 있도록하는 모듈
	//compile("javax.servlet:jstl")
	//compile("org.apache.tomcat.embed:tomcat-embed-jasper")
	
	//SpringBoot로 구동하기 위한 모듈
	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1")

	//Tomcat으로 구동하기 위한 모듈 (ServletInitializer)
	compile "org.springframework.boot:spring-boot-starter-tomcat:1.2.1.RELEASE"
	
	//TomcatJDBC 모듈
	compile "org.springframework.boot:spring-boot-starter-jdbc"
	
	//MyBatis 모듈 (버젼이 중요하다) 
	compile "org.mybatis:mybatis:3.4.1" 
	compile "org.mybatis:mybatis-spring:1.3.1"

	//JDBC Proxy 모듈 (쿼리확인용)
	compile	"org.lazyluke:log4jdbc-remix:${version.log4jdbcRemix}"

	//20170524 START
	//Actuator (check health)
	compile "org.springframework.boot:spring-boot-starter-actuator"
	//20170524 END


	compile "org.springframework.security.oauth:spring-security-oauth2"
	
	compile "org.springframework.boot:spring-boot-starter-security"
	compile "org.springframework.security:spring-security-jwt:1.0.2.RELEASE"
	compile "com.auth0:java-jwt:3.1.0"

	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
